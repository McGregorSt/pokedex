{"version":3,"sources":["PokeDisplay/PokesList/PokeElement/PokeDetails/PokeStats.js","PokeDisplay/PokesList/PokeElement/PokeDetails/PokeDetails.js","PokeDisplay/PokesList/PokeElement/PokeElement.js","PokeDisplay/PokesList/PokesList.js","PokeDisplay/PokeDisplay.js","PokeFilter/FilterInput/FilterInput.js","PokeFilter/PokeFilter.js","App.js","serviceWorker.js","index.js"],"names":["PokeStats","stats","this","props","statsClicked","displayDetails","map","detail","ability","name","stat","base_stat","className","toUpperCase","Component","PokeDetails","state","showDetails","detailsToDisplay","showDetailsClicked","details","pokeDetails","abilities","onDetailsClick","e","ind","stopPropagation","target","innerText","toLowerCase","setState","key","onClick","pokeStats","pokeName","PokeElement","isClicked","pokeElement","clickedPoke","pokeInd","clicked","PokesList","pokesList","pokesFetched","currentPokes","poke","url","active","Pagination","count","countPages","shape","variant","onChange","paginationChange","size","PokeDisplay","pokesToDisplay","filteredPokes","PokeInd","clickedBackground","FilterInput","placeholder","filterPokes","onKeyDown","keyDown","PokeFilter","baseUrl","App","pokesPerPage","currentPage","fetchPokesList","fetchUrl","then","pokes","a","json","results","endpoint","fetch","response","clickedPokeHandler","pokeUrl","onClickedBackgroundHandler","filter","includes","value","keyDownHandler","keyCode","onPaginationChangeHandler","checkWidth","window","innerWidth","addEventListener","lastPoke","firstPoke","slice","Math","ceil","length","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e67cbaed.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport './PokeStats.css'\r\n\r\nclass PokeStats extends Component {\r\n  render() {\r\n    const stats = this.props.statsClicked\r\n    const displayDetails = this.props.displayDetails.map((detail) => {\r\n      if (stats === 'abilities') {\r\n        return <li>{detail.ability.name}</li>\r\n      } else if (stats === 'stats') {\r\n        return (\r\n          <li>\r\n            {detail.stat.name}: {detail.base_stat} pts\r\n          </li>\r\n        )\r\n      }\r\n    })\r\n\r\n    return (\r\n      <div className=\"PokeStats\">\r\n        <div className=\"PokeStats__header\">{stats.toUpperCase()}</div>\r\n        <ul className=\"PokeStats__list\">{displayDetails}</ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PokeStats\r\n","import React, { Component } from 'react'\r\n\r\nimport './PokeDetails.css'\r\nimport PokeStats from './PokeStats'\r\n\r\nclass PokeDetails extends Component {\r\n  state = {\r\n    showDetails: false,\r\n    statsClicked: '',\r\n    detailsToDisplay: [],\r\n  }\r\n\r\n  showDetailsClicked = (details) => {\r\n    switch (details) {\r\n      case 'abilities':\r\n        return this.props.pokeDetails.abilities\r\n      case 'stats':\r\n        return this.props.pokeDetails.stats\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  onDetailsClick = (e, ind) => {\r\n    e.stopPropagation()\r\n\r\n    const statsClicked = e.target.innerText.toLowerCase()\r\n    this.setState({ statsClicked: statsClicked })\r\n\r\n    if (ind !== null && !this.state.showDetails) {\r\n      this.setState({ showDetails: !this.state.showDetails })\r\n    }\r\n    this.setState({ detailsToDisplay: this.showDetailsClicked(statsClicked) })\r\n  }\r\n\r\n  render() {\r\n    const details = ['abilities', 'stats']\r\n\r\n    let pokeDetails = details.map((detail, ind) => {\r\n      return (\r\n        <div className='Abs' key={detail} onClick={(e) => this.onDetailsClick(e, ind)}>\r\n          {detail.toUpperCase()}\r\n        </div>\r\n      )\r\n    })\r\n\r\n    let pokeStats = ''\r\n    if (this.state.showDetails) {\r\n      pokeStats = (\r\n        <div>\r\n          <PokeStats\r\n            statsClicked={this.state.statsClicked}\r\n            displayDetails={this.state.detailsToDisplay}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"PokeDetails\">\r\n        <div className=\"PokeName\">{this.props.pokeName}</div>\r\n        <div className=\"PokeSkills\">\r\n          {this.state.showDetails ? pokeStats : pokeDetails}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PokeDetails\r\n","import React, { Component } from 'react'\r\n\r\nimport './PokeElement.css'\r\nimport PokeDetails from './PokeDetails/PokeDetails'\r\n\r\nclass PokeElement extends Component {\r\n  state = {\r\n    isClicked: false,\r\n  }\r\n\r\n  render() {\r\n    let pokeElement = <p>{this.props.name}</p>\r\n\r\n    if (this.props.clickedPoke === this.props.pokeInd) {\r\n      pokeElement = (\r\n        <PokeDetails\r\n          pokeName={this.props.name}\r\n          pokeDetails={this.props.pokeDetails}\r\n          isClicked={this.props.isClicked}\r\n        />\r\n      )\r\n    }\r\n\r\n    return (\r\n      <li className={`PokeElm`} onClick={this.props.clicked}>\r\n        {pokeElement}\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PokeElement\r\n","import React, { Component } from 'react'\r\nimport { Pagination } from '@material-ui/lab'\r\n\r\nimport './PokesList.css'\r\nimport PokeElement from './PokeElement/PokeElement'\r\n\r\nclass PokesList extends Component {\r\n  render() {\r\n    let pokesList = ''\r\n\r\n    if (this.props.pokesFetched) {\r\n      pokesList = this.props.currentPokes.map((poke, ind) => {\r\n        return (\r\n          <div className={`Pokes`}>\r\n            <PokeElement\r\n              key={ind}\r\n              name={poke.name}\r\n              pokeInd={ind}\r\n              clicked={(e) => this.props.clicked(e, ind, poke.url)}\r\n              clickedPoke={this.props.clickedPoke}\r\n              pokeDetails={this.props.pokeDetails}\r\n              active={this.props.active}\r\n            />\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div className=\"PokesList\" onClick={this.props.clicked}>\r\n        <ul className=\"PokesGrid\">{pokesList}</ul>\r\n        <div className=\"Pagination\">\r\n          <Pagination\r\n            count={this.props.countPages}\r\n            shape=\"rounded\"\r\n            variant=\"outlined\"\r\n            onChange={this.props.paginationChange}\r\n            size=\"large\"\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PokesList\r\n","import React, { Component } from 'react'\r\n\r\nimport './PokeDisplay.css'\r\nimport PokesList from './PokesList/PokesList'\r\n\r\nclass PokeDisplay extends Component {\r\n  render() {\r\n    const pokesList = (\r\n      <PokesList\r\n        pokesToDisplay={this.props.pokesToDisplay}\r\n        pokesFetched={this.props.pokesFetched}\r\n        pokesList={this.props.pokesList}\r\n        filteredPokes={this.props.filteredPokes}\r\n        currentPokes={this.props.currentPokes}\r\n        clicked={this.props.clicked}\r\n        clickedPoke={this.props.clickedPoke}\r\n        pokeDetails={this.props.pokeDetails}\r\n        pokeInd={this.props.PokeInd}\r\n        active={this.props.active}\r\n        countPages={this.props.countPages}\r\n        paginationChange={this.props.paginationChange}\r\n        clickedBackground={this.props.clicked}\r\n      />\r\n    )\r\n    return <div>{pokesList}</div>\r\n  }\r\n}\r\n\r\nexport default PokeDisplay\r\n","import React, { Component } from 'react'\r\n\r\nimport './FilterInput.css'\r\nclass FilterInput extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"FilterInput\">\r\n        <input\r\n          placeholder='Search for your favourite Poke'\r\n          className=\"FilterInput__input\"\r\n          onChange={this.props.filterPokes}\r\n          onKeyDown={this.props.keyDown}\r\n        ></input>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FilterInput\r\n","import React, { Component } from 'react'\r\n\r\nimport './PokeFilter.css'\r\nimport FilterInput from './FilterInput/FilterInput'\r\n\r\nclass PokeFilter extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"PokeFilter\">\r\n          <FilterInput\r\n            filterPokes={this.props.filterPokes}\r\n            keyDown={this.props.keyDown}\r\n          />\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PokeFilter\r\n","import React, { Component } from 'react'\r\n\r\nimport './App.css'\r\nimport PokeDisplay from './PokeDisplay/PokeDisplay'\r\nimport PokeFilter from './PokeFilter/PokeFilter'\r\n\r\nconst baseUrl = 'https://pokeapi.co/api/v2/pokemon/?limit=44&offset=0'\r\nclass App extends Component {\r\n  state = {\r\n    pokesFetched: false,\r\n    pokesList: [],\r\n    filteredPokes: [],\r\n    pokesPerPage: 10,\r\n    currentPage: 1,\r\n    clickedPoke: null,\r\n    pokeDetails: {},\r\n  }\r\n\r\n  fetchPokesList = () => {\r\n    return this.fetchUrl(baseUrl).then(async (pokes) => {\r\n      const pokesList = await pokes.json()\r\n\r\n      this.setState({\r\n        pokesList: pokesList.results,\r\n        filteredPokes: pokesList.results,\r\n        pokesFetched: true,\r\n      })\r\n    })\r\n  }\r\n\r\n  fetchUrl = async (endpoint) => {\r\n    const response = await fetch(endpoint)\r\n    return response\r\n  }\r\n\r\n  clickedPokeHandler = (e, ind, pokeUrl) => {\r\n    e.stopPropagation();\r\n    if (this.state.clickedPoke === ind) {\r\n      this.setState({ clickedPoke: null })\r\n    } else {\r\n      this.setState({ clickedPoke: ind })\r\n      this.fetchUrl(pokeUrl).then(async (poke) => {\r\n        const details = await poke.json()\r\n        this.setState({ pokeDetails: details })\r\n      })\r\n    }\r\n  }\r\n\r\n  onClickedBackgroundHandler = (e) => {\r\n    this.setState({ clickedPoke: null })\r\n  }\r\n\r\n  filterPokes = (e) => {\r\n    this.setState({ currentPage: 1 })\r\n    const filteredPokes = this.state.filteredPokes.filter((poke) =>\r\n      poke.name.includes(e.target.value)\r\n    )\r\n    this.setState({\r\n      filteredPokes: filteredPokes,\r\n      currentPokes: filteredPokes,\r\n    })\r\n  }\r\n\r\n  keyDownHandler = (e) => {\r\n    if (e.keyCode === 8) {\r\n      this.setState({ filteredPokes: this.state.pokesList })\r\n    }\r\n  }\r\n\r\n  onPaginationChangeHandler = (e, value) => {\r\n    this.setState({ currentPage: value })\r\n  }\r\n\r\n  checkWidth = () => {\r\n    if (window.innerWidth < 1700) {\r\n      this.setState({ pokesPerPage: 8 })\r\n    }\r\n    if (window.innerWidth < 1300) {\r\n      this.setState({ pokesPerPage: 6 })\r\n    }\r\n    if (window.innerWidth < 1000) {\r\n      this.setState({ pokesPerPage: 4 })\r\n    }\r\n    if (window.innerWidth < 1000) {\r\n      this.setState({ pokesPerPage: 4 })\r\n    }\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.fetchPokesList()\r\n    window.addEventListener('resize', this.checkWidth)\r\n  }\r\n\r\n  render() {\r\n    const lastPoke = this.state.currentPage * this.state.pokesPerPage\r\n    const firstPoke = lastPoke - this.state.pokesPerPage\r\n    const currentPokes = this.state.filteredPokes.slice(firstPoke, lastPoke)\r\n    const countPages = Math.ceil(\r\n      this.state.filteredPokes.length / this.state.pokesPerPage\r\n    )\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <PokeFilter\r\n          filterPokes={(e) => this.filterPokes(e)}\r\n          keyDown={(e) => this.keyDownHandler(e)}\r\n        />\r\n        <PokeDisplay\r\n          pokesFetched={this.state.pokesFetched}\r\n          pokesList={this.state.pokesList}\r\n          filteredPokes={this.state.filteredPokes}\r\n          currentPokes={currentPokes}\r\n          clicked={this.clickedPokeHandler}\r\n          clickedPoke={this.state.clickedPoke}\r\n          pokeDetails={this.state.pokeDetails}\r\n          countPages={countPages}\r\n          paginationChange={this.onPaginationChangeHandler}\r\n          clickedBackground={this.onClickedBackgroundHandler}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}